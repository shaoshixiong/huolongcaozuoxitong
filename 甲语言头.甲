; 火龙操作系统 boot 甲语言
; 制表符=4
; 作者：邵世雄

[命令模式 "i486p"]						; "想要使用i486指令"的叙述

; 不指定相同数值
视频电子标准协会模式1	等换		0x117			; 第1种模式  16位
视频电子标准协会模式2	等换		0x105			; 第2种模式  8位       视频电子标准协会(简称VBE)

程序装载地址			等换		0x00280000		; 主程序装入目标
磁盘缓冲位置			等换		0x00100000		; 磁盘缓冲位置
磁盘缓冲位置0			等换		0x00008000		; 磁盘缓冲位置（实模式）

; boot_info
启动地址				等换		0x0ff0			; 设定启动区
键盘指示灯状态			等换		0x0ff1
颜色位数				等换		0x0ff2			; 关于颜色数目的信息，颜色的位数
屏幕横坐标				等换		0x0ff4			; 分辨率的X（屏幕 x）
屏幕纵坐标				等换		0x0ff6			; 分辨率的Y（屏幕 y）
显存					等换		0x0ff8			; 图像缓冲区的开始地址

		载址		0xc200							; 这个程序将要被装载到内存的什么地方呢？

; 画面设定::有没有vbe
		传送		加寄,0x9000
		传送		附段寄,加寄
		传送		终寄,0
		传送		加寄,0x4f00
		中断 		0x10
		比较		加寄,0x004f
		不等零		分辨率320

; 画面设定::vbe版本检查
		传送		加寄,[附段寄:终寄+4]
		比较		加寄,0x0200
		小于		分辨率320

; 画面设定::获取有关视频电子标准协会模式指定的模式的信息
		传送		计寄,视频电子标准协会模式1					; 第一选项
分辨率_重试:													; 第二选项
		传送		加寄,0x4f01
		中断		0x10
		比较		加寄,0x004f
		不等零		分辨率_下一个								; 下一选项

; 画面设定::检查屏幕模式信息
		传送		加寄,[附段寄:终寄+0x00]			; 8bit, 16位 常见的检查项目
		与			加寄,0x0080
		等零转		分辨率_下一个
		传送		加寄,计寄
		与			加寄,0x0010						; 检查是否为8位颜色或16位颜色
		比较		加寄,0x0010
		等零		分辨率_16位						; 如果是16位则跳转
		传送		数低,8							;  8位屏幕模式检查
		比较		字节 [附段寄:终寄+0x19],8
		不等零		分辨率_下一个
		比较		字节 [附段寄:终寄+0x1b],4
		不等零		分辨率_下一个

; 画面设定::模式切换
分辨率_设置:
		加法		计寄,0x4000
		传送		基寄,计寄						;	传送		基寄,视频电子标准协会模式1+0x4000
		减法		计寄,0x4000
		传送		加寄,0x4f02
		中断		0x10
		传送		字节 [颜色位数],数低			;记下屏幕模式（由乙语言引用）
		传送		加寄,[附段寄:终寄+0x12]
		传送		[屏幕横坐标],加寄
		传送		加寄,[附段寄:终寄+0x14]
		传送		[屏幕纵坐标],加寄
		传送		扩加寄,[附段寄:终寄+0x28]
		传送		[显存],扩加寄
		跳转		键盘指示灯状态

; 切换模式
分辨率_下一个:
		比较		计寄,视频电子标准协会模式1				; 到了第二次
		等零		分辨率_下一个模式1转2
		比较		计寄,视频电子标准协会模式2				; 由于第二次不可能，请转到分辨率320
		等零		分辨率320
分辨率_下一个模式1转2:
		传送		计寄,视频电子标准协会模式2
		跳转		分辨率_重试

; 16位屏幕模式检查
分辨率_16位:
		传送		数低,16
		比较		字节 [附段寄:终寄+0x19],16
		不等零		分辨率_下一个
		比较		字节 [附段寄:终寄+0x1b],6
		不等零		分辨率_下一个
		跳转		分辨率_设置

; 画面设定::无法使用视频电子标准协会模式指定的模式。
分辨率320:
		传送		加低,0x13					;vga图形，320x200x8bit颜色
		传送		加高,0x00
		中断		0x10
		传送		字节 [颜色位数],8			; 记录画面模式（参考乙语言）
		传送		字 [屏幕横坐标],320
		传送		字 [屏幕纵坐标],200
		传送		双字 [显存],0x000a0000

; 用 基本输入输出系统 (Bios)取得键盘上各种LED指示灯的状态
键盘指示灯状态:
		传送		加高,0x02
		中断		0x16 				; 键盘 bios
		传送		[键盘指示灯状态],加低

;防止片接受任何中断
;在兼容机的规格中，如果要初始化类似片，
;如果您在暂停之前不这样做，您偶尔会挂起
;片初始化将在稍后完成

		传送		加低,0xff
		输出		0x21,加低
		空操作							; 输出命令因为如果继续，似乎有一个模型不起作用
		输出		0xa1,加低

		禁中断							; 此外，即使在cpu级别也禁止中断。

; 为了让CPU能够访问1MB以上的内存空间，设定 A20GATE

		调用		等待时间
		传送		加低,0xd1
		输出		0x64,加低
		调用		等待时间
		传送		加低,0xdf			; 启用 a20
		输出		0x60,加低
		调用		等待时间

; 切换到保护模式


		全局表		[全局表0]				; 设定临时全局中断向量表
		传送		扩加寄,控寄0
		与			扩加寄,0x7fffffff		; 设bit31为0 （为了禁止颁）
		或			扩加寄,0x00000001		; 设bit0为1 （为了切换到保护模式）
		传送		控寄0,扩加寄
		跳转		传送显示
传送显示:
		传送		加寄,1*8				;  可读写的段32bit
		传送		数段寄,加寄
		传送		附段寄,加寄
		传送		标段寄,加寄
		传送		全段寄,加寄
		传送		栈段寄,加寄

; 主程序的转送

		传送		扩源寄,主程序			; 转送源	
		传送		扩终寄,程序装载地址		; 转送目的地
		传送		扩计寄,512*1024/4
		调用		复制内存

;磁盘数据最终转送到它本来的位置去
;首先从启动扇区开始

		传送		扩源寄,0x7c00			; 转送源
		传送		扩终寄,磁盘缓冲位置		; 转送目的地
		传送		扩计寄,512/4
		调用		复制内存

; 所有剩下的

		传送		扩源寄,磁盘缓冲位置0+512; 转送源
		传送		扩终寄,磁盘缓冲位置+512	; 转送目的地
		传送		扩计寄,0
		传送		计低,字节 [启动地址]
		乘法		扩计寄,512*18*2/4		; 从柱面数字变换为字节数/4
		减法		扩计寄,512/4			; 减法 IPL
		调用		复制内存

; 必须由”甲语言头“来完成的工作，至此全部完毕
; 以后就交由主程序来完成
	
; 主程序的启动

		传送		扩基寄,程序装载地址
		传送		扩计寄,[扩基寄+16]
		加法		扩计寄,3				; 扩计寄 += 3;
		右移		扩计寄,2				; 扩计寄 /= 4;
		等零转		跳						; 没有要转送的东西时
		传送		扩源寄,[扩基寄+20]		; 转送源
		加法		扩源寄,扩基寄
		传送		扩终寄,[扩基寄+12]		; 转送目的地
		调用		复制内存
跳:
		传送		扩栈寄,[扩基寄+12]		; 栈初始值
		跳转		双字 2*8:0x0000001b

等待时间:
		输入		加低,0x64
		与		    加低,0x02
		不等零		等待时间				; 与的结果如果不是0，就跳到等待时间
		返回

复制内存:
		传送		扩加寄,[扩源寄]
		加法		扩源寄,4
		传送		[扩终寄],扩加寄
		加法		扩终寄,4
		减法		扩计寄,1
		不等零		复制内存				; 减法运算的结果如果不是0，就跳转到复制内存
		返回
; 复制内存如果不忘记地址大小前缀，可以使用字符串命令编写

		字节对齐	16
全局描述表0:
		预约字节	8							; NULL 选中或
		定字		0xffff,0x0000,0x9200,0x00cf	;可以读写的段 （segment） 32bit
		定字		0xffff,0x0000,0x9a28,0x0047	;可以执行的段 （segment） 32bit (主程序用)

		定字		0
全局表0:
		定字		8*3-1
		定双字		全局描述表0

		字节对齐	16
主程序:
