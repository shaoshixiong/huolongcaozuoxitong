/* 先进先出相关的 */
/* 作者 : 邵世雄 */
#引入 "主程序.头"

#定义 标识_超出		0x0001

空 进出32_初始化(结构 先进先出32 *进出, 整型 大小, 整型 *buf, 结构 任务 *任)
/* 先进先出buf区初始化 */
{
	进出->大小 = 大小;
	进出->buf = buf;
	进出->可用 = 大小; /* 剩余空间 */
	进出->标记 = 0;
	进出->p = 0; /* 写入位置 */
	进出->q = 0; /* 读取位置 */
	进出->任 = 任;	/* 有数据写入时需要唤醒的任务 */
	返回;
}

整型 进出32_放入(结构 先进先出32 *进出, 整型 数据)
/* 向先进先出传递数据并保存 */
{
	若 (进出->可用 == 0) 
	{
		/* 可用没有了，溢出 */
		进出->标记 |= 标识_超出;
		返回 -1;
	}
	进出->buf[进出->p] = 数据;
	进出->p++;
	若 (进出->p == 进出->大小) 
	{
		进出->p = 0;
	}
	进出->可用--;
	若 (进出->任) 
	{
		若 (进出->任->标记 != 2)/* 如果任务处于休眠状态 */
			任_运行(进出->任, -1, 0);	 /* 将任务唤醒 */
	}
	返回 0;
}

整型 进出32_获取(结构 先进先出32 *进出)
/* 从先进先出取得一个数据 */
{
	整型 数据;
	若 (进出->可用 == 进出->大小) 
	{
		/* 如果buf区为空，则返回 -1 */
		返回 -1;
	}
	数据 = 进出->buf[进出->q];
	进出->q++;
	若 (进出->q == 进出->大小) 
	{
		进出->q = 0;
	}
	进出->可用++;
	返回 数据;
}

整型 进出32_状态(结构 先进先出32 *进出)
/* 报告一下到底积攒了多少数据 */
{
	返回 进出->大小 - 进出->可用;
}
